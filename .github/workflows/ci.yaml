name: CI
on: [push, pull_request]
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Cache
        uses: Swatinem/rust-cache@v1
      - name: Setup | Toolchain
        run: |
          rustup toolchain install stable --no-self-update --profile minimal --component clippy
          rustup toolchain install nightly --no-self-update --profile minimal --component rustfmt
      - name: Build | Clippy
        run: cargo clippy --all-targets -- -D warnings
      - name: Build | Rustfmt
        run: cargo +nightly fmt -- --check
  test:
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            binPath: target/debug/trunk
          - os: macos-latest
            binPath: target/debug/trunk
          - os: windows-latest
            binPath: target/debug/trunk.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Cache
        uses: Swatinem/rust-cache@v1
      - name: Setup | Rust
        run: rustup toolchain install stable --no-self-update --profile minimal
      - name: Build | Test
        run: cargo test
      # Run the CLI to ensure we don't have any subtle runtime issues.
      - name: Build | Run
        run: cargo run -- -h
      - name: Build | Upload Trunk
        uses: actions/upload-artifact@v3
        with:
          name: trunk-debug-${{ matrix.os }}
          path: |
            target/debug/trunk
            target/debug/trunk.exe
  build-examples:
    needs: test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        example: [proxy, seed, vanilla, webworker, webworker-gloo, yew, yew-tailwindcss]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Setup | Cache
        uses: Swatinem/rust-cache@v1
        with:
          working-directory: examples/${{ matrix.example }}
      - name: Setup | Rust
        run: rustup toolchain install stable --no-self-update --profile minimal --target wasm32-unknown-unknown
      - name: Setup | Download Trunk
        uses: actions/download-artifact@v3
        with:
          name: trunk-debug-${{ matrix.os }}
          path: target/debug
      - name: Build | Examples
        run: target/debug/trunk --config=examples/${{ matrix.example }}/Trunk.toml build
