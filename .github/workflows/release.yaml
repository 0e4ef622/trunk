name: release
on:
  push:
    tags:
    - 'v*'

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ""
          draft: true
          prerelease: false

  build:
    name: build
    runs-on: ${{ matrix.os }}
    needs: release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            binName: x86_64-unknown-linux-gnu
            binPath: target/release/trunk
          - os: macos-latest
            binName: x86_64-apple-darwin
            binPath: target/release/trunk
          - os: windows-latest
            binName: x86_64-pc-windows-msvc
            binPath: target\release\trunk.exe
    steps:
      - uses: actions/checkout@v2
      - run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
        shell: bash
      - run: echo "::set-env name=zip_name::trunk-${{ env.RELEASE_VERSION }}-${{ matrix.binName }}.zip"
        shell: bash
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: --release -- -h
      - uses: papeloto/action-zip@v1
        with:
          files: ${{ matrix.binPath }}
          dest: ${zip_name}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${zip_name}
          asset_name: ${zip_name}
          asset_content_type: application/zip
